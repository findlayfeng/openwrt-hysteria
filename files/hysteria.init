#!/bin/sh /etc/rc.common

USE_PROCD=1
START=55

package=$(basename $(readlink -f "$initscript"))
prog="/usr/bin/${package}"

_is_enabled() {
	local instance="$1"; shift

	local enabled
	config_get_bool enabled "$instance" "enabled" "0"

	[ "$enabled" == "1" ] || return 1
}

hysteria_start() {
	local instance=$1; shift

	local confdir
	local conffile

	local type
	config_get type $instance TYPE

	_is_enabled $instance || {
		status $instance 1>/dev/null && stop $instance
		return
	}

	local conffile
	config_get conffile $instance conffile "$type-$instance.yaml"

	[ "${conffile:0:1}" != "/" ] && {
		local confdir
		config_get confdir $instance confdir "/etc/$package"
		conffile="${confdir}/${conffile}"
	}

	procd_open_instance "$instance"
	procd_set_param command "$prog" "$type"
	procd_append_param command --disable-update-check
	procd_append_param command --config "$conffile"

	[ -x /sbin/ujail -a -e /etc/capabilities/$package.json ] && {
		procd_add_jail $type log

		procd_add_jail_mount "$conffile"

		[ "$type" = "client" ] &&
			procd_add_jail_mount "/etc/ssl/certs" ||
			procd_add_jail_mount "/etc/acme" # TODO 自动判断证书位置、如果使用内置的acme还要赋予写权限

		procd_set_param capabilities /etc/capabilities/$package.json

		procd_set_param user hysteria
		procd_set_param group hysteria

		procd_set_param no_new_privs 1
	}

	procd_set_param data "type=$type"
	procd_set_param file "$conffile"

	procd_set_param limits core="unlimited"
	local nofile=$(cat /proc/sys/fs/nr_open)
	procd_set_param limits nofile="$nofile $nofile"

	procd_set_param stdout 1
	procd_set_param stderr 1

	[ "$type" = "client" ] &&
		procd_set_param respawn 0 10 0 ||
		procd_set_param respawn 300 5 3

	procd_close_instance
}

start_service() {
	config_load "$package"

	config_foreach hysteria_start server $@
 	config_foreach hysteria_start client $@
}

service_triggers() {
	procd_add_reload_trigger "$package"
}
